import pytest
from selenium import webdriver
from selenium.webdriver.firefox.service import Service
import os


@pytest.fixture(scope="function")
def driver():
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –∑–∞–∫—Ä—ã—Ç–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞"""
    
    # –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä–∞–π–≤–µ—Ä –∏–∑ PATH –µ—Å–ª–∏ –æ–Ω —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    try:
        # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –¥—Ä–∞–π–≤–µ—Ä –±–µ–∑ webdriver-manager
        service = Service()
        driver = webdriver.Firefox(service=service)
        print("‚úÖ Firefox driver created using system PATH")
        
    except Exception as e:
        print(f"‚ùå Error creating driver from PATH: {e}")
        
        # –í–∞—Ä–∏–∞–Ω—Ç 2: –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–∞
        print("üîÑ Trying alternative approach...")
        
        # –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ geckodriver –≤—Ä—É—á–Ω—É—é (–µ—Å–ª–∏ –æ–Ω —É–∂–µ —Å–∫–∞—á–∞–Ω)
        geckodriver_path = "C:/WebDriver/geckodriver.exe"  # –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø—É—Ç—å
        
        if os.path.exists(geckodriver_path):
            service = Service(geckodriver_path)
            driver = webdriver.Firefox(service=service)
            print("‚úÖ Firefox driver created using manual path")
        else:
            # –í–∞—Ä–∏–∞–Ω—Ç 3: –ò—Å–ø–æ–ª—å–∑—É–µ–º Chrome –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
            try:
                from selenium.webdriver.chrome.service import Service as ChromeService
                from webdriver_manager.chrome import ChromeDriverManager
                
                service = ChromeService(ChromeDriverManager().install())
                driver = webdriver.Chrome(service=service)
                print("‚úÖ Chrome driver created as fallback")
            except:
                raise Exception("Cannot create any WebDriver. Please install Firefox or Chrome driver manually.")
    
    driver.maximize_window()
    yield driver
    driver.quit()